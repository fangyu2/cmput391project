<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- Generated by Avanquest Technology v:8.0. For information please visit: http://www.avanquestusa.com/ -->
<html lang="en">
<head>
	<title> Modify/Add </title>
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
	<meta http-equiv="Content-Style-Type" content="text/css;">
	<link rel="stylesheet" href="cmput391_g.css" type="text/css" media="screen,projection,print">	<!--// Document Style //-->
	<link rel="stylesheet" href="cmput391_015_p.css" type="text/css" media="screen,projection,print">	<!--// Page Style //-->
	<script src="cmput391_g.js" type="text/javascript"></script>		<!--// Document Script //-->
</head>
    
<%@ page import="cmput391.*" %>
<%@ page import="java.sql.*" %>


<body id="page">


<%@ page import="cmput391.*" %>
<%@ page import="java.sql.*" %>

<%
//waits for the register button to be clicked
//on click will return the user back to the manage user page
if(request.getParameter("rSubmit")!=null)
{
    checkUser(request, response, out);
}
//waits for the delete button to be clicked
//on click will return the user back to the manage user page
if(request.getParameter("dSubmit")!=null){
	deleteUser(request, response, out);
}
if(request.getParameter("mSubmit")!=null){
	openPage(response, out);
}

%>

<%!
//checks for a valid user input
//if the user exists it then it be passed into the updateUser() method
public void checkUser(HttpServletRequest request, HttpServletResponse response, JspWriter out) {
	
	try {
			String username = (request.getParameter("username")).trim();
			String sql = "select * from users where user_name = '" + username + "'";
			Statement stmt = null;
			ResultSet rset = null;
			stmt = UserConnection.getConnection().getConn().createStatement();
			rset = stmt.executeQuery(sql);
			String trueuser = "";
			while (rset != null && rset.next()) {
				trueuser = (rset.getString(1)).trim();
			}
			if (username.equals(trueuser)) {
				updateUser(username,request, response, out);
			} 
			if (username.equals("")) {
				out.println("<p><b> Username field not filled! </b></p>");
			}
			if (!username.equals("") && !username.equals(trueuser)) {
				checkPassword(username,request, response, out);
			}
		} catch (Exception ex) {
			System.out.println("" + ex.getMessage() + "");
		}
	}
	
//checks that password is matching for the password field and retypepassword
//field
	public void checkPassword(String username, HttpServletRequest request, HttpServletResponse response, JspWriter out) {
		try {	
		String password = (request.getParameter("password")).trim();
		String retypepassword = (request.getParameter("retypepassword")).trim();
		if(!password.equals(retypepassword)){
			out.println("<p><b> Passwords dont match! </b></p>");
		}
		if (password.equals("")) {
			out.println("<p><b> Password field not filled! </b></p>");
		}
		if (password.equals(retypepassword) && !password.equals("")){
			checkEmail(username, password, request, response, out);
		}
				
		} catch (Exception ex) {
		System.out.println("" + ex.getMessage() + "");
		}
	}
//checks that the email input does not already exist within the database
//all users have an unique email
	public void checkEmail(String username, String password, 
			HttpServletRequest request, HttpServletResponse response, JspWriter out) {
		try {
		
			String email = (request.getParameter("email"));
			String sql = "select * from persons where email = '" + email + "'";
			Statement stmt = null;
			ResultSet rset = null;
	
			stmt = UserConnection.getConnection().getConn().createStatement();
			rset = stmt.executeQuery(sql);

			String trueEmail = "";

			while (rset != null && rset.next()) {
				trueEmail = (rset.getString(5)).trim();
			}

			if (email.equals(trueEmail)) {
				out.println("<p><b> This Email is already registered by another user! </b></p>");
			}
			if (email.equals("")) {
				out.println("<p><b> Email field not filled! </b></p>");
			}
			if (!email.equals(trueEmail) && !email.equals("")) {
				registerUser(username, password, email, request, response, out);
			}
		} catch (Exception ex) {
			System.out.println("" + ex.getMessage() + "");
		}

	}
	
//will create the user and add all information into the their respective 
//tables
	public void registerUser(String username, String password, String email, 
			HttpServletRequest request, HttpServletResponse response, JspWriter out) {
		try {
		
		String comboBox = (request.getParameter("combo_box"));
		
		if(comboBox.equals("1. Patient")){
			comboBox = "p";
		}
		if(comboBox.equals("2. Doctor")){
			comboBox = "d";
		}
		if(comboBox.equals("3. Radiologist")){
			comboBox = "r";
		}
		if(comboBox.equals("4. Admin")){
			comboBox = "a";
		}
		
		String sql = "insert into users values ('" +username+ "','" +password+ "', '" +comboBox+ "', SYSDATE)";
		Statement stmt = null;
		ResultSet rset = null;

			stmt = UserConnection.getConnection().getConn().createStatement();
			rset = stmt.executeQuery(sql);
			UserConnection.getConnection().getConn().commit();
		
		String firstname = (request.getParameter("firstname"));
		String lastname = (request.getParameter("lastname"));
		String address = (request.getParameter("address"));
		String phone = (request.getParameter("phone"));
		String sql2 = "insert into persons values ('" +username+ "', '" +firstname+ "', '" +lastname+ "','" +address+ "', '" +email+ "', '" +phone+ "')";
		Statement stmt2 = null;
		ResultSet rset2 = null;
		
			stmt2 = UserConnection.getConnection().getConn().createStatement();
			rset2 = stmt2.executeQuery(sql2);
			UserConnection.getConnection().getConn().commit();
	 	
		if(comboBox.equals("d")){
			String doctorname = (request.getParameter("doctorname"));
			String patientname = (request.getParameter("patientname"));
			String sql3 = "select class from users where user_name = '" + patientname + "'";
			Statement stmt3 = null;
			ResultSet rset3 = null;
	
			stmt3 = UserConnection.getConnection().getConn().createStatement();
			rset3 = stmt3.executeQuery(sql3);

			String trueClass = "";

			while (rset3 != null && rset3.next()) {
				trueClass = (rset3.getString(1)).trim();
			}
			if(!doctorname.equals("") && !doctorname.equals(username) && !patientname.equals("")){
				out.println("<p><b>Sorry username and doctor name dont match!</b></p>");
			}
			if(!trueClass.equals("p")){
				out.println("<p><b>Sorry that user is not a patient or doesn't exist!</b></p>");
			}
			else{
				String sql4 = "insert into family_doctor values ('" +doctorname+ "', '" +patientname+ "')";
				Statement stmt4 = null;
				ResultSet rset4 = null;

					stmt4 = UserConnection.getConnection().getConn().createStatement();
					rset4 = stmt4.executeQuery(sql4);
					UserConnection.getConnection().getConn().commit();

					
			}
		}
		if(comboBox.equals("p")){
			String doctorname = (request.getParameter("doctorname"));
			String patientname = (request.getParameter("patientname"));
			String sql3 = "select class from users where user_name = '" + doctorname + "'";
			Statement stmt3 = null;
			ResultSet rset3 = null;
	
			stmt3 = UserConnection.getConnection().getConn().createStatement();
			rset3 = stmt3.executeQuery(sql3);

			String trueClass = "";

			while (rset3 != null && rset3.next()) {
				trueClass = (rset3.getString(1)).trim();
			}
			if(!patientname.equals("") && !patientname.equals(username) && !doctorname.equals("")){
				out.println("<p><b>Sorry your username and patient name dont match!</b></p>");
			}
			if(!trueClass.equals("d")){
				out.println("<p><b>Sorry that user is not a doctor or doesn't exist!</b></p>");
			}
			else{
				String sql4 = "insert into family_doctor values ('" +doctorname+ "', '" +patientname+ "')";
				Statement stmt4 = null;
				ResultSet rset4 = null;

					stmt4 = UserConnection.getConnection().getConn().createStatement();
					rset4 = stmt4.executeQuery(sql4);
					UserConnection.getConnection().getConn().commit();
					
					
			}
		}
		
		} catch (Exception ex) {
			System.out.println("" + ex.getMessage() + "");
		}
		
}
	
//updates the user information if the username already exists in the database

	public void updateUser(String username, HttpServletRequest request, HttpServletResponse response, JspWriter out) {
		try {
			String password = (request.getParameter("password"));
			String retypepassword = (request.getParameter("retypepassword"));
			String firstname = (request.getParameter("firstname"));
			String lastname = (request.getParameter("lastname"));
			String phone = (request.getParameter("phone"));
			String address = (request.getParameter("address"));
			String email = (request.getParameter("email"));
			String doctorname = (request.getParameter("doctorname"));
			String patientname = (request.getParameter("patientname"));
			
			
			if(!password.equals("")){
				if(!password.equals(retypepassword)){
					out.println("<p><b>Sorry passwords dont match!</b></p>");
				}
				if(password.equals(retypepassword)){
					String sql = "update users set password = '" + password + "' where user_name = '"+ username +"'";
					Statement stmt = null;
					ResultSet rset = null;

						stmt = UserConnection.getConnection().getConn().createStatement();
						rset = stmt.executeQuery(sql);
						UserConnection.getConnection().getConn().commit();
				}
			}
			
			if(!firstname.equals("")){
					String sql = "update persons set first_name = '" + firstname + "' where user_name = '"+ username +"'";
					Statement stmt = null;
					ResultSet rset = null;

						stmt = UserConnection.getConnection().getConn().createStatement();
						rset = stmt.executeQuery(sql);
						UserConnection.getConnection().getConn().commit();
				
			}
			if(!lastname.equals("")){
					String sql = "update persons set last_name = '" + lastname + "' where user_name = '"+ username +"'";
					Statement stmt = null;
					ResultSet rset = null;

						stmt = UserConnection.getConnection().getConn().createStatement();
						rset = stmt.executeQuery(sql);
						UserConnection.getConnection().getConn().commit();
				
			}
			if(!phone.equals("")){
					String sql = "update persons set phone = '" + phone + "' where user_name = '"+ username +"'";
					Statement stmt = null;
					ResultSet rset = null;

						stmt = UserConnection.getConnection().getConn().createStatement();
						rset = stmt.executeQuery(sql);
						UserConnection.getConnection().getConn().commit();
				
			}
			if(!address.equals("")){
				
					String sql = "update persons set address = '" + address + "' where user_name = '"+ username +"'";
					Statement stmt = null;
					ResultSet rset = null;

						stmt = UserConnection.getConnection().getConn().createStatement();
						rset = stmt.executeQuery(sql);
						UserConnection.getConnection().getConn().commit();
				
			}
			if(!email.equals("")){
				String sql = "select email from persons where email = '" + email + "'";
				Statement stmt = null;
				ResultSet rset = null;
		
				stmt = UserConnection.getConnection().getConn().createStatement();
				rset = stmt.executeQuery(sql);

				String trueEmail = "";

				while (rset != null && rset.next()) {
					trueEmail = (rset.getString(1)).trim();
				}
				if(email.equals(trueEmail)){
					out.println("<p><b>That email address is already being used by another user!</b></p>");
				}
				if(!email.equals(trueEmail)){
					String sql2 = "update persons set email = '" + email + "' where user_name = '"+ username +"'";
					Statement stmt2 = null;
					ResultSet rset2 = null;

						stmt2 = UserConnection.getConnection().getConn().createStatement();
						rset2 = stmt2.executeQuery(sql2);
						UserConnection.getConnection().getConn().commit();
				}
			}

			if(doctorname.equals(username)){
				
				String sql = "select class from users where user_name = '" + doctorname + "'";
				Statement stmt = null;
				ResultSet rset = null;
		
				stmt = UserConnection.getConnection().getConn().createStatement();
				rset = stmt.executeQuery(sql);

				String trueDoctorClass = "";

				while (rset != null && rset.next()) {
					trueDoctorClass = (rset.getString(1)).trim();
				}
				
				String sql2 = "select class from users where user_name = '" + patientname + "'";
				Statement stmt2 = null;
				ResultSet rset2 = null;
		
				stmt2 = UserConnection.getConnection().getConn().createStatement();
				rset2 = stmt2.executeQuery(sql2);

				String truePatientClass = "";

				while (rset2 != null && rset2.next()) {
					truePatientClass = (rset2.getString(1)).trim();
				}
				
				String sql3 = "select doctor_name, patient_name from family_doctor where doctor_name = '" + doctorname + "' and patient_name = '" + patientname +"'";
				Statement stmt3 = null;
				ResultSet rset3 = null;
		
				stmt3 = UserConnection.getConnection().getConn().createStatement();
				rset3 = stmt3.executeQuery(sql3);

				String trueDoctor = "";
				String truePatient = "";

				while (rset3 != null && rset3.next()) {
					trueDoctor = (rset3.getString(1)).trim();
					truePatient = (rset3.getString(2)).trim();
				}
				
				if(!trueDoctorClass.equals("d")){
					out.println("<p><b>Sorry that username is not a doctor!</b></p>");
				}
				if(!truePatientClass.equals("p")){
					out.println("<p><b>Sorry that username is a not a patient</b></p>");
				}
				if(doctorname.equals(trueDoctor) && patientname.equals(truePatient)){
					out.println("<p><b>That user is already your patient!</b></p>");
				}
				if(trueDoctorClass.equals("d") && truePatientClass.equals("p") && !doctorname.equals(trueDoctor) && !patientname.equals(truePatient)){
					String sql4 = "insert into family_doctor values ('" +doctorname+ "', '" +patientname+ "')";
					Statement stmt4 = null;
					ResultSet rset4 = null;

						stmt4 = UserConnection.getConnection().getConn().createStatement();
						rset4 = stmt4.executeQuery(sql4);
						UserConnection.getConnection().getConn().commit();
				}
			}
			
			if(patientname.equals(username)){
				String sql = "select class from users where user_name = '" + patientname + "'";
				Statement stmt = null;
				ResultSet rset = null;
		
				stmt = UserConnection.getConnection().getConn().createStatement();
				rset = stmt.executeQuery(sql);

				String truePatientClass = "";

				while (rset != null && rset.next()) {
					truePatientClass = (rset.getString(1)).trim();
				}
				String sql2 = "select class from users where user_name = '" + doctorname + "'";
				Statement stmt2 = null;
				ResultSet rset2 = null;
		
				stmt2 = UserConnection.getConnection().getConn().createStatement();
				rset2 = stmt2.executeQuery(sql2);

				String trueDoctorClass = "";

				while (rset2 != null && rset2.next()) {
					trueDoctorClass = (rset2.getString(1)).trim();
				}
				String sql3 = "select doctor_name, patient_name from family_doctor where doctor_name = '" + doctorname + "' and patient_name = '"+ patientname +"'";
				Statement stmt3 = null;
				ResultSet rset3 = null;
		
				stmt3 = UserConnection.getConnection().getConn().createStatement();
				rset3 = stmt3.executeQuery(sql3);

				String trueDoctor = "";
				String truePatient = "";

				while (rset3 != null && rset3.next()) {
					trueDoctor = (rset3.getString(1)).trim();
					truePatient = (rset3.getString(2)).trim();
				}
				if(!truePatientClass.equals("p")){
					out.println("<p><b>Sorry that username is not a patient!</b></p>");
				}
				if(!trueDoctorClass.equals("d")){
					out.println("<p><b>Sorry that username is a not a doctor</b></p>");
				}
				if(doctorname.equals(trueDoctor) && patientname.equals(truePatient)){
					out.println("<p><b>That user is already your doctor!</b></p>");
				}
				if(truePatientClass.equals("p") && trueDoctorClass.equals("d") && !doctorname.equals(trueDoctor) && !patientname.equals(truePatient)){
					String sql4 = "insert into family_doctor values ('" +doctorname+ "', '" +patientname+ "')";
					Statement stmt4 = null;
					ResultSet rset4 = null;

						stmt4 = UserConnection.getConnection().getConn().createStatement();
						rset4 = stmt4.executeQuery(sql4);
						UserConnection.getConnection().getConn().commit();
				}
			}
		} catch (Exception ex) {
			System.out.println("" + ex.getMessage() + "");
		}
		
}
//delete an existing user from the database based on the user name input
	public void deleteUser(HttpServletRequest request, HttpServletResponse response, JspWriter out) {
		try{
			String username = (request.getParameter("username")).trim();
			String sql = "select * from users where user_name = '" + username + "'";
			Statement stmt = null;
			ResultSet rset = null;
			stmt = UserConnection.getConnection().getConn().createStatement();
			rset = stmt.executeQuery(sql);
			String trueuser = "";
			while (rset != null && rset.next()) {
				trueuser = (rset.getString(1)).trim();
			}
			
			String sql2 = "select * from persons where user_name = '" + username + "'";
			Statement stmt2 = null;
			ResultSet rset2 = null;
			stmt2 = UserConnection.getConnection().getConn().createStatement();
			rset2 = stmt2.executeQuery(sql2);
			String trueuser2 = "";
			while (rset2 != null && rset2.next()) {
				trueuser2 = (rset2.getString(1)).trim();
			}
			
			String sql3 = "select doctor_name from family_doctor where doctor_name = '" + username + "'";
			Statement stmt3 = null;
			ResultSet rset3 = null;
			stmt3 = UserConnection.getConnection().getConn().createStatement();
			rset3 = stmt3.executeQuery(sql3);
			String trueuser3 = "";
			while (rset3 != null && rset3.next()) {
				trueuser3 = (rset3.getString(1)).trim();
			}
			
			String sql4 = "select patient_name from family_doctor where patient_name = '" + username + "'";
			Statement stmt4 = null;
			ResultSet rset4 = null;
			stmt4 = UserConnection.getConnection().getConn().createStatement();
			rset4 = stmt4.executeQuery(sql4);
			String trueuser4 = "";
			while (rset4 != null && rset4.next()) {
				trueuser4 = (rset4.getString(1)).trim();
			}
			
			if(!username.equals(trueuser)){
				out.println("<p><b>That user does not exist!</b></p>");
			}
			if(username.equals(trueuser3)){
				String sql5 = "delete from family_doctor where doctor_name = '" + username + "'";
				Statement stmt5 = null;
				ResultSet rset5 = null;
				stmt5 = UserConnection.getConnection().getConn().createStatement();
				rset5 = stmt5.executeQuery(sql5);
				UserConnection.getConnection().getConn().commit();
			}
			if(username.equals(trueuser4)){
				String sql5 = "delete from family_doctor where patient_name = '" + username + "'";
				Statement stmt5 = null;
				ResultSet rset5 = null;
				stmt5 = UserConnection.getConnection().getConn().createStatement();
				rset5 = stmt5.executeQuery(sql5);
				UserConnection.getConnection().getConn().commit();
			}
			if(username.equals(trueuser2)){
				String sql5 = "delete from persons where user_name = '" + username + "'";
				Statement stmt5 = null;
				ResultSet rset5 = null;
				stmt5 = UserConnection.getConnection().getConn().createStatement();
				rset5 = stmt5.executeQuery(sql5);
				UserConnection.getConnection().getConn().commit();
			}
			if(username.equals(trueuser)){
				String sql5 = "delete from users where user_name = '" + username + "'";
				Statement stmt5 = null;
				ResultSet rset5 = null;
				stmt5 = UserConnection.getConnection().getConn().createStatement();
				rset5 = stmt5.executeQuery(sql5);
				UserConnection.getConnection().getConn().commit();
			}
			
		}catch (Exception ex) {
			System.out.println("" + ex.getMessage() + "");
		}
	}
//opens the manageUsers.jsp page	
	public void openPage(HttpServletResponse response, JspWriter out) {
		try{
			response.sendRedirect("manageUsers.jsp");
		}catch (Exception ex) {
			System.out.println("" + ex.getMessage() + "");
		}
	}
	
	
	%>


<form method="post">
	<input type="submit" value="Manage" name="mSubmit">
    <BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR><BR></BR>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<input type="submit" value="Delete" name="dSubmit">
	<input id="e24" class="cc49" type="text" name="username" size="23">
	<input id="e23" class="cc49" type="password" name="password" size="23">
	<input id="e22" class="cc50" type="submit" value="Modify/Add" name="rSubmit">
	<div id="e21" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UserName:
	</div>
	<div id="e20" class="cc50">
		&nbsp;&nbsp;Password:
	</div>
	<div id="e19" class="cc51">
		Modify/Add:
	</div>
	<input id="e18" class="cc49" type="password" name="retypepassword" size="23">
	<div id="e17" class="cc50">
		Retype Password:
	</div>
	<div id="e16" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class:
	</div>
	<div id="e15" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Email:
	</div>
	<input id="e14" class="cc49" type="text" name="firstname" size="23">
	<div id="e13" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;First Name:
	</div>
	<input id="e12" class="cc49" type="text" name="lastname" size="23">
	<div id="e11" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Last Name:
	</div>
	<input id="e10" class="cc49" type="text" name="phone" size="23">
	<div id="e9" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone:
	</div>
	<input id="e8" class="cc49" type="text" name="address" size="23">
	<div id="e7" class="cc50">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Address:
	</div>
	<input id="e6" class="cc49" type="text" name="email" size="23">
	<select id="e5" class="cc52" size="1" name="combo_box">
	<option> 1. Patient</option>
	<option> 2. Doctor</option>
	<option> 3. Radiologist</option>
	<option> 4. Admin</option>
	</select>
	<input id="e4" class="cc49" type="text" name="doctorname" size="23">
	<input id="e3" class="cc49" type="text" name="patientname" size="23">
	<div id="e2" class="cc50">
		Doctor Name:
	</div>
	<div id="e1" class="cc50">
		&nbsp;Patient Name:
	</div>
</form>
</body>
</html>